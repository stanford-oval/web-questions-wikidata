[
  {
    "QuestionId": "WebQTrn-2393",
    "RawQuestion": "who started google?",
    "ProcessedQuestion": "who started google",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0387r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0387r ns:law.invention.inventor ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gjpq",
            "EntityName": "Larry Page"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gjq6",
            "EntityName": "Sergey Brin"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2397",
    "RawQuestion": "what year did arizona diamondbacks win the world series?",
    "ProcessedQuestion": "what year did arizona diamondbacks win the world series",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0x0d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0x0d ns:sports.sports_team.championships ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018my",
            "EntityName": "2001 World Series"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2404",
    "RawQuestion": "who is jason morgan married to in real life?",
    "ProcessedQuestion": "who is jason morgan married to in real life",
    "Parses": [
      {
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n                ns:m.0b4nb8 ns:tv.tv_character.appeared_in_tv_program ?y .\n                ?y ns:tv.regular_tv_appearance.actor ?z .\n                ?z ns:people.person.spouse_s ?s .\n                ?s ns:people.marriage.spouse ?x .\n                ?s ns:people.marriage.type_of_union ns:m.04ztj .\nFilter (?x != ?z)\nFILTER(NOT EXISTS {?s ns:people.marriage.from ?sk0} || \n           EXISTS {?s ns:people.marriage.from ?sk1 . \n                   FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?s ns:people.marriage.to ?sk2} || \n           EXISTS {?s ns:people.marriage.to ?sk3 . \n                   FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n?s ns:people.marriage.from ?sk4 .\n}\nORDER BY DESC(xsd:datetime(?sk4))\nLIMIT 1",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j6g561",
            "EntityName": "Sheree Gustin"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2405",
    "RawQuestion": "what is colorado's state flower?",
    "ProcessedQuestion": "what is colorado 's state flower",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n4w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n4w ns:government.governmental_jurisdiction.official_symbols ?y .\n?y ns:location.location_symbol_relationship.symbol ?x .\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:m.04627gn .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069d4f",
            "EntityName": "Aquilegia caerulea"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2408",
    "RawQuestion": "which jane austen books are movies?",
    "ProcessedQuestion": "which jane austen books are movies",
    "Parses": [
      {
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n\t?x ns:common.topic.notable_types ns:m.0jsg2m .\n        ?x ns:film.film.story_by ns:m.040dv .\n}",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.011yg9",
            "EntityName": "Sense and Sensibility"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q8r2w",
            "EntityName": "Northanger Abbey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02q8r4y",
            "EntityName": "Persuasion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.072zl1",
            "EntityName": "Pride & Prejudice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07tj4c",
            "EntityName": "Emma"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07v8_d",
            "EntityName": "Pride and Prejudice"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07v95y",
            "EntityName": "Pride and Prejudice: A Latter-Day Comedy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.08m1s2",
            "EntityName": "Becoming Jane"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09ncpg",
            "EntityName": "Northanger Abbey"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09rnxj",
            "EntityName": "Persuasion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f98p_",
            "EntityName": "Jane Austen in Manhattan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fsd9t",
            "EntityName": "Mansfield Park"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0qjzd",
            "EntityName": "Clueless"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2410",
    "RawQuestion": "where is lanzarote in a world map?",
    "ProcessedQuestion": "where is lanzarote in a world map",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01s8wm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01s8wm ns:geography.island.island_group ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hzjwx2",
            "EntityName": "Canary Islands"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2414",
    "RawQuestion": "who plays dante falconeri?",
    "ProcessedQuestion": "who plays dante falconeri",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06wc9fm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06wc9fm ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04ndnk",
            "EntityName": "Dominic Zamprogna"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2416",
    "RawQuestion": "who is the president of israel 2012?",
    "ProcessedQuestion": "who is the president of israel 2012",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.013zfq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.013zfq ns:government.government_office_or_title.office_holders ?y .\n?y ns:government.government_position_held.office_holder ?x .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) })\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c_8s",
            "EntityName": "Shimon Peres"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2420",
    "RawQuestion": "where do islamic people go to worship?",
    "ProcessedQuestion": "where do islamic people go to worship",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0flw86)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0flw86 ns:religion.religion.types_of_places_of_worship ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04_xn",
            "EntityName": "Mosque"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0pc5qwj",
            "EntityName": "Masjid Hamza, Valley Stream"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2423",
    "RawQuestion": "what god does taoism believe in?",
    "ProcessedQuestion": "what god does taoism believe in",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07gvx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07gvx ns:religion.religion.deities ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g7jh",
            "EntityName": "He Xiangu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g7kl",
            "EntityName": "Cao Guojiu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g7ln",
            "EntityName": "Li Tieguai"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g7m0",
            "EntityName": "Lan Caihe"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01g7rf",
            "EntityName": "Lü Dongbin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01gcpc",
            "EntityName": "Han Xiangzi"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01gcpr",
            "EntityName": "Zhang Guolao"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01gcqh",
            "EntityName": "Zhongli Quan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01tbmq",
            "EntityName": "Jade Emperor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0258q8",
            "EntityName": "Queen Mother of the West"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.025964",
            "EntityName": "Three Pure Ones"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02rj87h",
            "EntityName": "Magu"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09n_d1",
            "EntityName": "Yuanshi Tianzun"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j626gb",
            "EntityName": "Cai Shen"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2431",
    "RawQuestion": "what year did george washington become the president?",
    "ProcessedQuestion": "what year did george washington become the president",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.034rd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.034rd ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.from ?x .\n?y ns:government.government_position_held.basic_title ns:m.060c4 .\n}\n",
        "Answers": [
          {
            "AnswerType": "Value",
            "AnswerArgument": "1789-04-30",
            "EntityName": null
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2434",
    "RawQuestion": "who was the first wife of prophet muhammad?",
    "ProcessedQuestion": "who was the first wife of prophet muhammad",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04s9n)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04s9n ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n?y ns:people.marriage.from ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06sp9b",
            "EntityName": "Khadīja bint Khuwaylid"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2436",
    "RawQuestion": "on which river is paris?",
    "ProcessedQuestion": "on which river is paris",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qtj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qtj ns:location.location.partially_contains ?x .\n?x ns:common.topic.notable_types ns:m.01xs05k .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f3vz",
            "EntityName": "Seine"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2438",
    "RawQuestion": "who is sherri shepherd's new husband?",
    "ProcessedQuestion": "who is sherri shepherd 's new husband",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c33pl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c33pl ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\nFILTER(NOT EXISTS {?y ns:people.marriage.from ?sk0} || \nEXISTS {?y ns:people.marriage.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to ?sk2} || \nEXISTS {?y ns:people.marriage.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k3pbm5",
            "EntityName": "Lamar Sally"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2439",
    "RawQuestion": "who did kevin garnett play for before celtics?",
    "ProcessedQuestion": "who did kevin garnett play for before celtics",
    "Parses": [
      {
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nfilter(?x != ns:m.0bwjj)\nns:m.02lm0t ns:sports.pro_athlete.teams ?z .\n?z ns:sports.sports_team_roster.team ns:m.0bwjj . #Celtics\n?z ns:sports.sports_team_roster.from ?from .\nns:m.02lm0t ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n?y  ns:sports.sports_team_roster.to ?to .\nFILTER (xsd:dateTime(?from) - xsd:dateTime(?to) >= 0)\n}\nORDER BY Desc(xsd:datetime(?from))\nLIMIT 1",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jmgb",
            "EntityName": "Minnesota Timberwolves"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2440",
    "RawQuestion": "who the voice of peter griffin?",
    "ProcessedQuestion": "who the voice of peter griffin",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03n6jv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03n6jv ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.special_performance_type ns:m.02nsjvf .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021yw7",
            "EntityName": "Seth MacFarlane"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2441",
    "RawQuestion": "what is the name of dawn french's first novel?",
    "ProcessedQuestion": "what is the name of dawn french 's first novel",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01tzm9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01tzm9 ns:book.author.works_written ?x .\n?x ns:book.written_work.copyright_date ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "Answers": []
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2446",
    "RawQuestion": "where does manny pacquiao live?",
    "ProcessedQuestion": "where does manny pacquiao live",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03pmbb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03pmbb ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01rfwg",
            "EntityName": "South Cotabato"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03fyt0",
            "EntityName": "Kiamba"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2447",
    "RawQuestion": "when were the duggar kids born?",
    "ProcessedQuestion": "when were the duggar kids born",
    "Parses": [
      {
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nns:m.089twl ns:people.person.children ?z .\n?z ns:people.person.date_of_birth ?x .\n}",
        "Answers": [
          {
            "AnswerType": "Value",
            "AnswerArgument": "1988-03-03",
            "EntityName": null
          },
          {
            "AnswerType": "Value",
            "AnswerArgument": "1990-01-12",
            "EntityName": null
          },
          {
            "AnswerType": "Value",
            "AnswerArgument": "1991-05-17",
            "EntityName": null
          },
          {
            "AnswerType": "Value",
            "AnswerArgument": "1992-11-04",
            "EntityName": null
          },
          {
            "AnswerType": "Value",
            "AnswerArgument": "1993-12-21",
            "EntityName": null
          },
          {
            "AnswerType": "Value",
            "AnswerArgument": "1995-01-20",
            "EntityName": null
          },
          {
            "AnswerType": "Value",
            "AnswerArgument": "1996-08-28",
            "EntityName": null
          },
          {
            "AnswerType": "Value",
            "AnswerArgument": "1997-10-28",
            "EntityName": null
          },
          {
            "AnswerType": "Value",
            "AnswerArgument": "1998-12-30",
            "EntityName": null
          },
          {
            "AnswerType": "Value",
            "AnswerArgument": "2000-04-21",
            "EntityName": null
          },
          {
            "AnswerType": "Value",
            "AnswerArgument": "2001-07-07",
            "EntityName": null
          },
          {
            "AnswerType": "Value",
            "AnswerArgument": "2002-11-15",
            "EntityName": null
          },
          {
            "AnswerType": "Value",
            "AnswerArgument": "2004-05-23",
            "EntityName": null
          },
          {
            "AnswerType": "Value",
            "AnswerArgument": "2005-10-11",
            "EntityName": null
          },
          {
            "AnswerType": "Value",
            "AnswerArgument": "2007-08-02",
            "EntityName": null
          },
          {
            "AnswerType": "Value",
            "AnswerArgument": "2008-12-18",
            "EntityName": null
          },
          {
            "AnswerType": "Value",
            "AnswerArgument": "2009-12-10",
            "EntityName": null
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2449",
    "RawQuestion": "what four countries are in the united kingdom?",
    "ProcessedQuestion": "what four countries are in the united kingdom",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:base.aareas.schema.administrative_area.administrative_children ?x .\n?x ns:base.aareas.schema.administrative_area.administrative_area_type ns:m.0hzjlmp .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02jx1",
            "EntityName": "England"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05bcl",
            "EntityName": "Northern Ireland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q1r",
            "EntityName": "Scotland"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0j5g9",
            "EntityName": "Wales"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2452",
    "RawQuestion": "where did the seminole native americans live?",
    "ProcessedQuestion": "where did the seminole native americans live",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0198dl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0198dl ns:people.ethnicity.geographic_distribution ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05mph",
            "EntityName": "Oklahoma"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2454",
    "RawQuestion": "what airlines fly into ontario international airport?",
    "ProcessedQuestion": "what airlines fly into ontario international airport",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01l4_l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01l4_l ns:aviation.airport.hub_for ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01srh1",
            "EntityName": "Great Lakes Airlines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026tgjz",
            "EntityName": "West Air"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ppptb",
            "EntityName": "UPS Airlines"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06xnkm",
            "EntityName": "Ameriflight"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2477",
    "RawQuestion": "who is rob kardashian dating now 2012?",
    "ProcessedQuestion": "who is rob kardashian dating now 2012",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.043n6dp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.043n6dp ns:celebrities.celebrity.sexual_relationships ?y .\n?y ns:celebrities.romantic_relationship.celebrity ?x .\n?y ns:celebrities.romantic_relationship.relationship_type ns:m.02_7k44 .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bxzjj9",
            "EntityName": "Rita Ora"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2484",
    "RawQuestion": "what all does stan kroenke own?",
    "ProcessedQuestion": "what all does stan kroenke own",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dg6f6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dg6f6 ns:sports.sports_team_owner.teams_owned ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01kkjq",
            "EntityName": "Colorado Rapids"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06x76",
            "EntityName": "St. Louis Rams"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jbqf",
            "EntityName": "Colorado Avalanche"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jmdb",
            "EntityName": "Denver Nuggets"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xbm",
            "EntityName": "Arsenal F.C."
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2485",
    "RawQuestion": "what countries does china border?",
    "ProcessedQuestion": "what countries does china border",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d05w3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d05w3 ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016zwt",
            "EntityName": "Nepal"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01crd5",
            "EntityName": "Vietnam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03_3d",
            "EntityName": "Japan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03rk0",
            "EntityName": "India"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.047lj",
            "EntityName": "Kazakhstan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04hhv",
            "EntityName": "Laos"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w8f",
            "EntityName": "Mongolia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04xn_",
            "EntityName": "Myanmar"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b7q",
            "EntityName": "North Korea"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05sb1",
            "EntityName": "Pakistan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bnz",
            "EntityName": "Russia"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06f32",
            "EntityName": "Taiwan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07bxhl",
            "EntityName": "Bhutan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07dvs",
            "EntityName": "Tajikistan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jdd",
            "EntityName": "Afghanistan"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0jt3tjf",
            "EntityName": "Kyrgyzstan"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2490",
    "RawQuestion": "what is british columbia?",
    "ProcessedQuestion": "what is british columbia",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015jr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015jr ns:base.aareas.schema.administrative_area.administrative_area_type ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0hzcdlq",
            "EntityName": "Canadian province"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2499",
    "RawQuestion": "who did plaxico burress sign with 2012?",
    "ProcessedQuestion": "who did plaxico burress sign with 2012",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.047j_j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.047j_j ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) })\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05tfm",
            "EntityName": "Pittsburgh Steelers"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2501",
    "RawQuestion": "who plays lois in family guy?",
    "ProcessedQuestion": "who plays lois in family guy",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019nnl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019nnl ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.03pcqz .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03jldb",
            "EntityName": "Alex Borstein"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2502",
    "RawQuestion": "what state did dwight d. eisenhower live in?",
    "ProcessedQuestion": "what state did dwight d. eisenhower live in",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.028rk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.028rk ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n?x ns:common.topic.notable_types ns:m.0kpys4 .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05tbn",
            "EntityName": "Pennsylvania"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07b_l",
            "EntityName": "Texas"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2505",
    "RawQuestion": "what is vanderbilt university mascot?",
    "ProcessedQuestion": "what is vanderbilt university mascot",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pq4w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pq4w ns:education.educational_institution.mascot ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05k6hxh",
            "EntityName": "Vanderbilt University Mr. Commodore"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2506",
    "RawQuestion": "what famous book did benjamin franklin wrote?",
    "ProcessedQuestion": "what famous book did benjamin franklin wrote",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:book.author.works_written ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01zwbg",
            "EntityName": "Poor Richard's Almanack"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02s9g3g",
            "EntityName": "Articles of Belief and Acts of Religion"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03c67p8",
            "EntityName": "Some Fruits of Solitude in Reflections and Maxims"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.041027",
            "EntityName": "The Speech of Polly Baker"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04g063c",
            "EntityName": "Fart Proudly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t1zmd",
            "EntityName": "Bite-size Ben Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t1zmn",
            "EntityName": "Autobiography, Poor Richard, and later writings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t1zmx",
            "EntityName": "Benjamin Franklin's the art of virtue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04t1zn4",
            "EntityName": "The sayings of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04w5ynd",
            "EntityName": "Compleated Autobiography by Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05b22sd",
            "EntityName": "The Drinker's Dictionary"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05q9nw8",
            "EntityName": "Observations Concerning the Increase of Mankind, Peopling of Countries, etc."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0638kh",
            "EntityName": "The Autobiography of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.066ymc6",
            "EntityName": "Political, Miscellaneous And Philosophical Pieces"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.069v34p",
            "EntityName": "The Means and Manner of Obtaining Virtue"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06bc5yn",
            "EntityName": "Free silver, and some other things"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06dqc2w",
            "EntityName": "Founding Fathers Benjamin Franklin Volume 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06f96j7",
            "EntityName": "Essays And Letters V1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06fl24x",
            "EntityName": "Poor Richard's Horse Keeper"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06gsgp3",
            "EntityName": "Selected Works of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06gw6_b",
            "EntityName": "Conseils pour s'enrichir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06hvzsn",
            "EntityName": "Authobiography Of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06j_wqp",
            "EntityName": "The Writings Of Benjamin Franklin, Vol. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06jq4kg",
            "EntityName": "The Immortal Mentor"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06l923t",
            "EntityName": "My Dear Girl Ii"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06ln9sy",
            "EntityName": "How to Attain Moral Perfection"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06lsf_m",
            "EntityName": "Articles Of Belief And Acts Of Religion Vol.2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06m0y80",
            "EntityName": "The glory of eternity"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06n38yt",
            "EntityName": "Reflection On Courtship And Marriage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06n8wr1",
            "EntityName": "Not Your Usual Founding Father"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06pnj_d",
            "EntityName": "Avis nécessaire à ceux qui veulent devenir riche"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06q2529",
            "EntityName": "Collected Works Of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06spsy3",
            "EntityName": "The Life of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06thfrr",
            "EntityName": "The Works Of Benjamin Franklin V1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07v5q",
            "EntityName": "United States Declaration of Independence"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b28ym",
            "EntityName": "A Dissertation on Liberty and Necessity, Pleasure and Pain"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdhz",
            "EntityName": "Address"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdj_",
            "EntityName": "The life and letters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdj1",
            "EntityName": "Articles of belief"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdj4",
            "EntityName": "The art of making money plenty"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdj7",
            "EntityName": "Autobiography"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdjb",
            "EntityName": "The autobiography of Benjamin Franklin and selections from his other writings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdjj",
            "EntityName": "The essays, humorous, moral and literary of the late Dr. Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdjq",
            "EntityName": "Franklin was there"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdjt",
            "EntityName": "The ingenious Dr. Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdjx",
            "EntityName": "The life and essays of the late Doctor Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdk2",
            "EntityName": "The life of Benjamin Franklin, written chiefly by himself"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdk5",
            "EntityName": "The life of Doctor Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdk8",
            "EntityName": "The life of Dr. Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdkc",
            "EntityName": "The life of the late Doctor Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdkg",
            "EntityName": "The life of the late Dr. Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdkk",
            "EntityName": "Memoirs of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdkn",
            "EntityName": "Memoirs of the life and writings of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdkr",
            "EntityName": "A parable"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdkv",
            "EntityName": "The political thought of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdky",
            "EntityName": "Private correspondence of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdl0",
            "EntityName": "Select works, including his autobiography"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdl6",
            "EntityName": "Some account of the Pennsylvania Hospital"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdl9",
            "EntityName": "The works of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdld",
            "EntityName": "The works of Dr. Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdlh",
            "EntityName": "Works of the late Doctor Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bhjdll",
            "EntityName": "The works of the late Dr. Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqyl_",
            "EntityName": "The autobiography, with an introd"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqyld",
            "EntityName": "America's Big Ben"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqylh",
            "EntityName": "Apology for printers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqyln",
            "EntityName": "The autobiography of Benjamin Franklin, and a sketch of Franklin's life from the point where the autobiography ends, drawn chiefly from his letters"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqylw",
            "EntityName": "The autobiography, Poor Richard's almanac and other papers"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqym2",
            "EntityName": "Benjamin Franklin on balloons"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqym6",
            "EntityName": "B. Franklin, innovator"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqymc",
            "EntityName": "Early to bed, and early to rise, makes a man healthy, wealthy, and wise, or, Early rising, a natural, social, and religious duty"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqymg",
            "EntityName": "Father Abraham's speech to a great number of people, at a vendue of merchant-goods"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqyml",
            "EntityName": "Franklin's Way to wealth, or, \\\"Poor Richard improved\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqymr",
            "EntityName": "A letter from B. Franklin to a young man"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqymv",
            "EntityName": "A letter from Mr. Franklin to Mr. Peter Collinson, F.R.S. concerning the effect of lightning ; A letter of Benjamin Franklin, Esq. to Mr. Peter Collinson, F.R.S. concerning an electrical kite"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqymy",
            "EntityName": "New experiments and observations on electricity"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqyn2",
            "EntityName": "Observations on the causes and cure of smoky chimneys"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqyn8",
            "EntityName": "Poor Richard, or, The way to wealth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqynk",
            "EntityName": "Satires & Bagatelles"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqynp",
            "EntityName": "The way to wealth, or, Poor Richard improved"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0bqqyns",
            "EntityName": "What good is a newborn baby?"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1dy",
            "EntityName": "The autobiography and other writings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1f0",
            "EntityName": "The autobiography of Benjamin Franklin; a restoration of a \\\"fair copy\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1f3",
            "EntityName": "The bagatelles from Passy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1f6",
            "EntityName": "Benjamin Franklin and Jonathan Edwards"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1f9",
            "EntityName": "Benjamin Franklin's autobiographical writings"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1fd",
            "EntityName": "Benjamin Franklin's Experiments"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1fh",
            "EntityName": "Benjamin Franklin's own story"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1fl",
            "EntityName": "Benjamin Franklin's Proposals for the education of youth in Pennsylvania, 1749"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1fp",
            "EntityName": "The complete works in philosophy, politics, and morals, of the late Dr. Benjamin Franklin, now first collected and arranged: with memoirs of his early life, written by himself"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1fs",
            "EntityName": "Experiments and observations on electricity, made at Philadelphia in America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1fw",
            "EntityName": "Facetiæ Frankliana.   [sic]"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1fz",
            "EntityName": "Franklin's boyhood in Boston"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1g1",
            "EntityName": "Franklin's wit & folly"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1g4",
            "EntityName": "A letter of advice to a young man concerning marriage"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1g7",
            "EntityName": "Letters and papers of Benjamin Franklin and Richard Jackson, 1753-1785"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1gb",
            "EntityName": "The letters of Benjamin Franklin & Jane Mecom"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1gf",
            "EntityName": "Letters to the press, 1758-1775"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1gj",
            "EntityName": "The life and essays, of Dr. Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1gm",
            "EntityName": "On war and peace"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1gq",
            "EntityName": "The Papers of Benjamin Franklin, Vol. 28: Volume 28: November 1, 1778 through February 28, 1779"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1gt",
            "EntityName": "Poor Richard, 1733"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1gx",
            "EntityName": "Poor Richard day by day"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1h2",
            "EntityName": "Representative selections"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1h5",
            "EntityName": "\\\"The sayings of Poor Richard\\\""
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1h8",
            "EntityName": "The select works of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1hc",
            "EntityName": "Sheep will never make insurrections"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1hg",
            "EntityName": "The wisdom of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1hk",
            "EntityName": "The works of Dr. Benjamin Franklin, in philosophy, politics, and morals"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1hn",
            "EntityName": "The works of Dr. Benjn. Franklin;"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c1t1hr",
            "EntityName": "The writings of Benjamin Franklin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0dytg4y",
            "EntityName": "The Papers of Benjamin Franklin, Volume 1: January 1, 1706 through December 31, 1734"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0f5j2d",
            "EntityName": "The Way to Wealth"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xptgyh",
            "EntityName": "The Morals of Chess"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sd3_",
            "EntityName": "Silence Dogood, No. 1"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sd60",
            "EntityName": "Silence Dogood, No. 2"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sd6w",
            "EntityName": "Silence Dogood, No. 3"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sd7_",
            "EntityName": "Silence Dogood, No. 5"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sd7d",
            "EntityName": "Silence Dogood, No. 4"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sd9_",
            "EntityName": "Silence Dogood, No. 7"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sd9c",
            "EntityName": "Silence Dogood, No. 6"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sdbl",
            "EntityName": "Silence Dogood, No. 8"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sdc8",
            "EntityName": "Silence Dogood, No. 9"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sdds",
            "EntityName": "Silence Dogood, No. 10"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sdfb",
            "EntityName": "Silence Dogood, No. 11"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sdfp",
            "EntityName": "Silence Dogood, No. 12"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sdg1",
            "EntityName": "Silence Dogood, No. 13"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0y5sdgc",
            "EntityName": "Silence Dogood, No. 14"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2508",
    "RawQuestion": "where did brian williams go to college?",
    "ProcessedQuestion": "where did brian williams go to college",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030p0z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030p0z ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01nnsv",
            "EntityName": "George Washington University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02vnp2",
            "EntityName": "The Catholic University of America"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05twn6",
            "EntityName": "Brookdale Community College"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2512",
    "RawQuestion": "which island in greece?",
    "ProcessedQuestion": "which island in greece",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035qy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035qy ns:base.aareas.schema.administrative_area.administrative_children ?x .\n?x ns:common.topic.notable_types ns:m.01xxv5b .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01s2g1",
            "EntityName": "Ionian Islands"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2513",
    "RawQuestion": "who has won the most fa cup?",
    "ProcessedQuestion": "who has won the most fa cup",
    "Parses": [
      {
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT  ?x\nWHERE {\n    {\n      SELECT ?x (COUNT(?x) as ?count)\n      WHERE {\n          ns:m.02_p0 ns:sports.sports_award_type.winners ?y .\n          ?y ns:sports.sports_award.award_winner ?x .\n      }\n    }\n    {\n      SELECT (MAX(?count) AS ?maxCount)\n      WHERE {\n        SELECT ?x (COUNT(?x) as ?count) \n        WHERE {\n          ns:m.02_p0 ns:sports.sports_award_type.winners ?y .\n          ?y ns:sports.sports_award.award_winner ?x .\n        }\n      }\n    }\n    FILTER (?maxCount = ?count)\n}",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.050fh",
            "EntityName": "Manchester United F.C."
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0xbm",
            "EntityName": "Arsenal F.C."
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2517",
    "RawQuestion": "when did hurricane irene hit ct?",
    "ProcessedQuestion": "when did hurricane irene hit ct",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02p70bg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02p70bg ns:meteorology.tropical_cyclone.tropical_cyclone_season ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0fq0n_y",
            "EntityName": "2011 Atlantic hurricane season"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2518",
    "RawQuestion": "who did michael jackson play in the wiz?",
    "ProcessedQuestion": "who did michael jackson play in the wiz",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09889g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09889g ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.027fwmt .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02ztbm",
            "EntityName": "Scarecrow"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2525",
    "RawQuestion": "where did jerry spinelli go to college?",
    "ProcessedQuestion": "where did jerry spinelli go to college",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05djw1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05djw1 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01jt2w",
            "EntityName": "Temple University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hft3",
            "EntityName": "Gettysburg College"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09kvv",
            "EntityName": "Johns Hopkins University"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2526",
    "RawQuestion": "what is the zip code for cordova tn?",
    "ProcessedQuestion": "what is the zip code for cordova tn",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07j5_n)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07j5_n ns:location.citytown.postal_codes ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03dxntr",
            "EntityName": "38018"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nq_8m",
            "EntityName": "38088"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07nq_c7",
            "EntityName": "38016"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2535",
    "RawQuestion": "who was the prime minister of canada in 1998?",
    "ProcessedQuestion": "who was the prime minister of canada in 1998",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d060g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d060g ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.060bp .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"1998-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"1998-01-01\"^^xsd:dateTime) })\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0k0y0",
            "EntityName": "Jean Chrétien"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2536",
    "RawQuestion": "what did ron howard direct?",
    "ProcessedQuestion": "what did ron howard direct",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g2lq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g2lq ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n?x ns:film.film.directed_by ns:m.0g2lq .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02mh4b",
            "EntityName": "Night Shift"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02yf34",
            "EntityName": "Grand Theft Auto"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.09m6kg",
            "EntityName": "A Beautiful Mind"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0crrc8",
            "EntityName": "Dr. Seuss' How the Grinch Stole Christmas"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2540",
    "RawQuestion": "what inspired monet?",
    "ProcessedQuestion": "what inspired monet",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01xnj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01xnj ns:influence.influence_node.influenced_by ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.016s03",
            "EntityName": "Eugène Delacroix"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01dqt1",
            "EntityName": "Gustave Courbet"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0233w",
            "EntityName": "Camille Pissarro"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.03fw00",
            "EntityName": "Eugène Boudin"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.06466",
            "EntityName": "Pierre-Auguste Renoir"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.074ck",
            "EntityName": "Stéphane Mallarmé"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0kzxl",
            "EntityName": "Charles-François Daubigny"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2542",
    "RawQuestion": "where does kaka live?",
    "ProcessedQuestion": "where does kaka live",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04qv66)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04qv66 ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date ?sk0} || \nEXISTS {?y ns:people.place_lived.end_date ?sk1 . \nFILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date ?sk2} || \nEXISTS {?y ns:people.place_lived.start_date ?sk3 . \nFILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01hy_",
            "EntityName": "Brasília"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05mxlfq",
            "EntityName": "Gama, Federal District"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2548",
    "RawQuestion": "what college did charles richard drew go to?",
    "ProcessedQuestion": "what college did charles richard drew go to",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.018t67)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.018t67 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01w5m",
            "EntityName": "Columbia University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.052nd",
            "EntityName": "McGill University"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0b5fng",
            "EntityName": "McGill University Faculty of Medicine"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0gdm1",
            "EntityName": "Amherst College"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2551",
    "RawQuestion": "where did the oakland raiders move from?",
    "ProcessedQuestion": "where did the oakland raiders move from",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05l71)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05l71 ns:user.dylanrocks.national_football_league.nfl_teams_that_have_moved_cities.original_city ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.030qb3t",
            "EntityName": "Los Angeles"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2556",
    "RawQuestion": "what are some of the religions in australia?",
    "ProcessedQuestion": "what are some of the religions in australia",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.092bf5",
            "EntityName": "Buddhism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0c8wxp",
            "EntityName": "Catholicism"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0flw86",
            "EntityName": "Islam"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0n2g",
            "EntityName": "Anglicanism"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2559",
    "RawQuestion": "what type of political system is headed by queen elizabeth ii?",
    "ProcessedQuestion": "what type of political system is headed by queen elizabeth ii",
    "Parses": [
      {
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\n  ns:m.0d1_f ns:government.politician.government_positions_held ?y1 .\t# Queen Elizabeth II\n  ?y1 ns:government.government_position_held.jurisdiction_of_office ?y2 .  # ?y2 = country\n  ?y2 ns:location.country.form_of_government ?x .\n}",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.014j8_",
            "EntityName": "Federation"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0163hx",
            "EntityName": "Consensus democracy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.018wl5",
            "EntityName": "Parliamentary system"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01fpfn",
            "EntityName": "Unitary state"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01q20",
            "EntityName": "Constitutional monarchy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.021zlr",
            "EntityName": "Non-partisan democracy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.026wp",
            "EntityName": "Democracy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.04szc",
            "EntityName": "Monarchy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0drnm",
            "EntityName": "Representative democracy"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.0g3y9q",
            "EntityName": "Federal monarchy"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2562",
    "RawQuestion": "what city did obama grow up in?",
    "ProcessedQuestion": "what city did obama grow up in",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:people.person.place_of_birth ?x .\n?x ns:common.topic.notable_types ns:m.01m9 .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.02hrh0_",
            "EntityName": "Honolulu"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2572",
    "RawQuestion": "which states does the connecticut river flow through?",
    "ProcessedQuestion": "which states does the connecticut river flow through",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ldvs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ldvs ns:location.location.partially_containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpys4 .\n}\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01x73",
            "EntityName": "Connecticut"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.059f4",
            "EntityName": "New Hampshire"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05k7sb",
            "EntityName": "Massachusetts"
          },
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.07_f2",
            "EntityName": "Vermont"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2573",
    "RawQuestion": "what are the biggest cities in illinois?",
    "ProcessedQuestion": "what are the biggest cities in illinois",
    "Parses": [
      {
        "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03v0t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03v0t ns:location.location.contains ?x .\n?x ns:common.topic.notable_types ns:m.01m9 .\n?x ns:topic_server.population_number ?sk0 .\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.01_d4",
            "EntityName": "Chicago"
          }
        ]
      }
    ]
  },
  {
    "QuestionId": "WebQTrn-2575",
    "RawQuestion": "which province in canada is the most populated?",
    "ProcessedQuestion": "which province in canada is the most populated",
    "Parses": [
      {
        "Sparql": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT  ?x\nWHERE {\n  {\n    SELECT ?x (MAX(?yr) AS ?recent_yr)\n    WHERE {\n      ns:m.0d060g ns:location.location.contains ?x . # Canada\n      ?x ns:common.topic.notable_types ns:m.01nm . # Canadian Province\n      ?x ns:location.statistical_region.population ?y .\n      ?y ns:measurement_unit.dated_integer.number ?p .\n      ?y ns:measurement_unit.dated_integer.year ?yr .\n    }\n    GROUP BY ?x \n  }\n  {\n    SELECT ?x ?p ?yr\n    WHERE {\n      ns:m.0d060g ns:location.location.contains ?x . # Canada\n      ?x ns:common.topic.notable_types ns:m.01nm . # Canadian Province\n      ?x ns:location.statistical_region.population ?y .\n      ?y ns:measurement_unit.dated_integer.number ?p .\n      ?y ns:measurement_unit.dated_integer.year ?yr .\n    }\n  }\n  FILTER (?yr = ?recent_yr)\n}\nORDER BY DESC(xsd:integer(?p))\nLIMIT 1",
        "Answers": [
          {
            "AnswerType": "Entity",
            "AnswerArgument": "m.05kr_",
            "EntityName": "Ontario"
          }
        ]
      }
    ]
  }
]